{"componentChunkName":"component---src-templates-post-tsx","path":"/post/programmers/시소 짝궁.js","result":{"data":{"file":{"ext":".js","name":"시소 짝궁","fields":{"content":"function solution(weights) {\n  var answer = 0;\n\n  const l = [2, 3, 4];\n\n  const w2c = new Map(); // weight -> count\n\n  for (let i = 0; i < weights.length; i++) {\n    const w = weights[i];\n    const c = w2c.get(w);\n\n    w2c.set(w, (c || 0) + 1);\n  }\n\n  const w2p = new Map(); // weight -> pair weight\n\n  l.forEach((l1) => {\n    w2c.forEach((c1, w1) => {\n      l.forEach((l2) => {\n        w2c.forEach((c2, w2) => {\n          const wl1 = w1 * l1;\n          const wl2 = w2 * l2;\n\n          if (wl1 === wl2 && w1 < w2) {\n            if (!w2p.has(w1)) {\n              w2p.set(w1, new Set());\n            }\n\n            const p = w2p.get(w1);\n\n            p.add(w2);\n          }\n        });\n      });\n    });\n  });\n\n  w2c.forEach((c, w) => {\n    answer += (c * (c - 1)) / 2;\n  });\n\n  w2p.forEach((p, w) => {\n    const c1 = w2c.get(w);\n\n    p.forEach((w) => {\n      const c2 = w2c.get(w);\n\n      answer += c1 * c2;\n    });\n  });\n\n  return answer;\n}\n","stampObject":{"modified":1685342388,"created":1685342388}}},"markdownRemark":{"html":"<blockquote>\n<p>Lv.2 문제인데도 솔루션을 빠르게 떠올려내지 못해서 슬프다. 😢</p>\n</blockquote>\n<h2>풀이 방법</h2>\n<p>최대 10만명의 사람의 몸무게가 주어진다. 모든 사람들의 위치별 몸무게를 구한 뒤 짝궁의 개수를 찾아주면 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">O</mi><mo stretchy=\"false\">(</mo><msup><mi mathvariant=\"normal\">N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\rm O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span> 으로 시간초과가 난다.</p>\n<p>반면 주어지는 몸무게 값의 범위는 100이상 1000이하인 정수라는 점을 이용하면 시간안에 문제를 해결할 수 있다.</p>\n<ol>\n<li>몸무게 별 인원수를 구한다.</li>\n<li>시소 중심으로부터 2m, 3m, 4m 떨어진 왼편/오른편의 모든 자리에 특정 몸무게를 가진 사람을 앉혔을 경우 균형을 이루는 서로 다른 몸무게들의 <strong>조합</strong>을 구한다.</li>\n<li><code>1.</code>에서 구한 몸무게 별 인원수를 이용하여, <code>2.</code>에서 구한 짝궁의 몸무게별 인원수를 각각 구한 뒤 곱하여 정답에 누적한다.</li>\n<li>같은 몸무게를 가진 사람의 인원수<code>n</code>를 구하여 정답에 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>n</mi><mo>×</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">n \\times (n - 1) \\over 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">×</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span> 한 값을 누적한다. (같은 몸무게를 가진 사람들끼리는 모두 짝궁이 될 수 있기 때문이다.)</li>\n</ol>\n<h3>※ 부가설명 ※</h3>\n<ul>\n<li><code>3.</code>에서 조합을 구하기 위해 몸무게가 항상 왼편보다 오른편이 큰 경우만 계산하였다.</li>\n<li>몸무게 값의 범위가 100이상 1000이하이기 때문에, <code>3.</code>에서 균형을 이루는 몸무게들의 조합을 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">O</mi><mo stretchy=\"false\">(</mo><msup><mi mathvariant=\"normal\">N</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\rm O(N^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span> 으로 계산하여도 시간초과가 나질 않는다.</li>\n</ul>","frontmatter":{"title":"Lv.2 시소 짝궁"}}},"pageContext":{"slug":"programmers/시소 짝궁.js","slugNoExt":"programmers/시소 짝궁","repoName":"algorithm-storage","userName":"junghyunbak","profileUrl":"https://avatars.githubusercontent.com/u/44913775?v=4","utterances":"junghyunbak/junghyunbak.github.io","googleSiteVerification":"LwKjAts-rLkskyg9wgFh0L-OC3Y2Eo2T4SBrqPjxu8c"}},"staticQueryHashes":[],"slicesMap":{}}