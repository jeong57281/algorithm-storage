{"componentChunkName":"component---src-templates-post-tsx","path":"/post/index.js","result":{"data":{"file":{"ext":".js","name":"index","fields":{"content":"// baekjoon input template\n// prettier-ignore\n{var fs=require('fs');var filePath=process.platform==='linux'?'/dev/stdin':'./input';var stdin=fs.readFileSync(filePath).toString().trim().split('\\n').map(s=>s.trim());var input=(()=>{var line=0;return()=>stdin[line++]})();var SI=()=>input();var NI=()=>parseInt(input());var SAI=(sep=' ')=>input().split(sep);var NAI=(sep=' ')=>input().split(sep).map(Number);var CA=(n,v=null)=>Array(n).fill(v);var CAA=(n,m,v=null)=>Array.from(Array(n),()=>Array(m).fill(v));var CAAA=(n,m,h,v=null)=>Array.from(Array(n),()=>Array.from(Array(m),()=>Array(h).fill(v)));var P=console.log;}\n\nconst N = NI();\n\nconst picture = [];\n\nCA(N).forEach(() => {\n  picture.push(SAI(''));\n});\n\nconst M = picture[0].length;\n\nconst dy = [-1, 1, 0, 0];\nconst dx = [0, 0, -1, 1];\n\nconst dfs = (y, x, visited, weakness, color) => {\n  if (visited[y][x]) {\n    return;\n  }\n\n  visited[y][x] = true;\n\n  for (let i = 0; i < 4; i++) {\n    const ny = y + dy[i];\n    const nx = x + dx[i];\n\n    if (ny < 0 || ny >= N || nx < 0 || nx >= M) {\n      continue;\n    }\n\n    if (!weakness) {\n      if (picture[ny][nx] === color) {\n        dfs(ny, nx, visited, weakness, color);\n      }\n    } else {\n      switch(color) {\n        case 'R':\n          case 'G':\n            if(picture[ny][nx] === 'R' || picture[ny][nx] === 'G') {\n        dfs(ny, nx, visited, weakness, color);\n\n            }\n            break;\n\n          default:\n            if(picture[ny][nx] === color) {\n        dfs(ny, nx, visited, weakness, color);\n\n            }\n            break;\n      }\n    }\n  }\n};\n\nconst getConnectedComponent = (weakness) => {\n  let count = 0;\n\n  const visited = CAA(N, M, false);\n\n  for (let y = 0; y < N; y++) {\n    for (let x = 0; x < N; x++) {\n      if (visited[y][x]) {\n        continue;\n      }\n\n      dfs(y, x, visited, weakness, picture[y][x]);\n\n      count++;\n    }\n  }\n\n  return count;\n};\n\nP(getConnectedComponent(false), getConnectedComponent(true));\n","stampObject":{"modified":1684310508,"created":1675238903}}},"markdownRemark":null},"pageContext":{"slug":"index.js","slugNoExt":"index","repoName":"algorithm-storage","userName":"jeong57281","profileUrl":"https://avatars.githubusercontent.com/u/44913775?v=4","utterances":"jeong57281/jeong57281.github.io","googleSiteVerification":"LwKjAts-rLkskyg9wgFh0L-OC3Y2Eo2T4SBrqPjxu8c"}},"staticQueryHashes":[],"slicesMap":{}}